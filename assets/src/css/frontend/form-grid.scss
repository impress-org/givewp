@use "sass:string";

$MIN_REM_SIZE: 16px;

/**
 * Safely use rem values in distributed code for unpredictable environments (e.g. for use inside a WordPress plugin).
 *
 * This does not support IE 11 and a few other outdated browser.
 * A Sass mixin could be used to provide a fallback value for this.
 *
 * @param {Number} $value
 * @return {String} e.g. for $value: 3 and $MIN_REM_SIZE: 16px => max(3rem, 48px)
 */
@function safe-rem($value) {
    @return string.unquote("max(#{$value}rem, #{$value * $MIN_REM_SIZE})");
}


.give-form-grid {
    display: flex;

    &-media {
        min-width: 38%;

        img {
            min-height: 100%;
            width: 100%;
            object-fit: cover;
        }
    }

    &-container {
        display: flex;
        flex-direction: column;
        width: 100%;
    }
}

.give-form-grid-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: flex-start;
    padding:  18px ;

    & > h3 {
        font-size: safe-rem(1);
        font-weight: 700 !important;
    }

    & > p {
        font-size: 1rem;
        font-weight: 400;
    }

    & > button {
        background-color: transparent!important;
        padding: 0;
        border: none;
        font-size: safe-rem(1);
        font-weight: 400;
        text-decoration: underline;
        text-underline-offset: 5px;
        cursor: pointer;

    }
}

.give-form-grid-btn {
    justify-content: center;
    align-items: center;
    padding: 1rem;
    border: 0.125rem solid var(--give-primary-color);
    border-radius: 0.4rem;
    background-color: var(--give-primary-color);
    color: #fff;
    text-align: center;
    font-family: inherit;
    font-size: safe-rem(1);
    font-weight: 600;
    line-height: 1.2;

    transition-property: background-color, color;
    transition-duration: 200ms;
    transition-timing-function: ease-in;
}
